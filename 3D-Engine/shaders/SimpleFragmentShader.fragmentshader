//#version 330 core
//
//// Interpolated values from the vertex shaders
//in vec2 UV;
//
//// Ouput data
//out vec3 color;
//
//uniform sampler2D myTextureSampler;
//
//void main() {
//
//	// Output color = color specified in the vertex shader,
//	// interpolated between all 3 surrounding vertices
//	color = texture(myTextureSampler, UV).rgb;
//
//}

#version 330 core

layout(location = 0) out vec4 color;
layout(location = 1) out vec4 color2;

uniform vec4 colour;
uniform vec2 light_pos;
uniform sampler2D myTextureSampler;

in DATA
{
	vec4 position;
	vec4 color;
	vec2 UV;

} fs_in;

void main()
{
	float intensity = 1.0 / length(fs_in.position.xy - light_pos);
	// color = colour * intensity;
	color = (texture(myTextureSampler, fs_in.UV).rgba + fs_in.color)  * intensity;
}